---
- name: Install Roundcube and dependencies
  ansible.builtin.apt:
    state: present
    name: "{{ item }}"
    update_cache: true
  with_items:
    - roundcube
    - roundcube-plugins
    - roundcube-plugins-extra
    - roundcube-pgsql
    - php-ldap
    - php-net-ldap3
    - php-zip
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Get PHP params
  block:
    - name: Register php command output
      ansible.builtin.command: php -v
      register: php_version_command_output
      failed_when: php_version_command_output.rc != 0
      changed_when: true

    - name: Get PHP version with regexp
      ansible.builtin.set_fact:
        php_version: "{{ php_version_command_output.stdout | regex_search('php ([0-9]+\\.[0-9]+)', '\\1', ignorecase=true) | first }}"

    - name: Get PHP directory
      ansible.builtin.set_fact:
        php_directory: "/etc/php/{{ php_version }}/apache2"

- name: Enable LDAP extension in PHP
  ansible.builtin.lineinfile:
    path: "{{ [php_directory, 'php.ini'] | ansible.builtin.path_join }}"
    regexp: "^;?extension=ldap"
    line: "extension=ldap"
  notify: Restart Apache

- name: Enable Apache modules
  ansible.builtin.command: "a2enmod {{ item }}"
  failed_when: false
  changed_when: true
  with_items:
    - ssl
    - rewrite
  notify: Restart Apache

- name: Disable Apache default site
  ansible.builtin.command: "a2dissite 000-default"
  failed_when: false
  changed_when: true
  notify: Restart Apache

- name: Copy Rouncube host Apache config
  ansible.builtin.template:
    src: roundcube/roundcube.conf.j2
    dest: "/etc/apache2/sites-available/{{ roundcube.server_fqdn }}.conf"
    mode: "0644"

- name: Enable Roundcube site in Apache
  ansible.builtin.command: "a2ensite {{ roundcube.server_fqdn }}"
  failed_when: false
  changed_when: true
  notify: Restart Apache

- name: Setup Roundcube PostgreSQL db
  become: true
  become_method: ansible.builtin.sudo
  become_user: postgres
  block:
    - name: Create Roundcube database
      community.postgresql.postgresql_db:
        name: "{{ postgresql.roundcube_database }}"

    - name: Run SQL scripts
      ansible.builtin.include_tasks: run_sql_scripts.yml
      with_items:
        - { db: "{{ postgresql.roundcube_database }}", src: postgresql/prepare_roundcube.sql.j2, dest: /tmp/prepare_roundcube.sql }

- name: Set Roundcube database config
  ansible.builtin.template:
    src: roundcube/debian-db.php.j2
    dest: /etc/roundcube/debian-db.php
    owner: root
    group: www-data
    mode: "0640"

- name: Set main config values
  ansible.builtin.lineinfile:
    path: /etc/roundcube/config.inc.php
    regexp: "^\\$config\\['{{ item.key }}'\\]"
    line: "$config['{{ item.key }}'] = '{{ item.value }}';"
  with_items:
    - { key: default_host, value: "tls://{{ mail_domains[0].server_fqdn }}" }
    - { key: smtp_host, value: "tls://{{ mail_domains[0].server_fqdn }}:587" }
    - { key: imap_host, value: "tls://{{ mail_domains[0].server_fqdn }}:143" }
    - { key: product_name, value: "{{ mail_domains[0].name }}" }
    - { key: address_book_type, value: "sql" }
    - { key: session_lifetime, value: "{{ roundcube.session_lifetime }}" }
    - { key: debug_level, value: "0" }
    - { key: reply_mode, value: "1" }
    - { key: contact_form_mode, value: "business" }

- name: Enable roundcube plugins
  ansible.builtin.blockinfile:
    path: /etc/roundcube/config.inc.php
    insertafter: "^\\$config\\['plugins'\\].*"
    marker: "// {mark} ANSIBLE MANAGED BLOCK"
    block: |
      'managesieve',
      'password',
      'markasjunk',
      'new_user_identity',
      'new_user_dialog',
      'globaladdressbook',
      'html5_notifier',
      'zipdownload'

- name: Remove empty configs in plugins
  ansible.builtin.lineinfile:
    path: "/etc/roundcube/plugins/{{ item }}/config.inc.php"
    state: absent
    regexp: ".*array().*"
  with_items:
    - password
    - managesieve
    - zipdownload

- name: Set zipdownload plugin values
  ansible.builtin.blockinfile:
    path: /etc/roundcube/plugins/zipdownload/config.inc.php
    insertbefore: "^\\?>.*"
    marker: "// {mark} ANSIBLE MANAGED BLOCK"
    block: |
      $config['zipdownload_attachments'] = 1;
      $config['zipdownload_selection'] = '100MB';
      $config['zipdownload_charset'] = 'UTF-8';

- name: Set password plugin values
  ansible.builtin.blockinfile:
    path: /etc/roundcube/plugins/password/config.inc.php
    insertbefore: "^\\?>.*"
    marker: "// {mark} ANSIBLE MANAGED BLOCK"
    block: |
      $config['password_driver'] = 'sql';
      $config['password_minimum_length'] = 8;
      $config['password_force_save'] = true;
      $config['password_algorithm'] = 'dovecot';
      $config['password_algorithm_options'] = [];
      $config['password_algorithm_prefix'] = '';
      $config['password_db_dsn'] =
        'pgsql://{{ postgresql.roundcube_user_name }}:{{ postgresql.roundcube_user_pass }}@{{ postgresql.host }}/{{ postgresql.mail_server_database }}';
      $config['password_query'] = 'UPDATE users SET password_hash=%P WHERE local=%l AND domain=%d';
      $config['password_dovecotpw_method'] = 'ARGON2ID';
      $config['password_dovecotpw'] = '/usr/bin/doveadm pw -r 2';
      $config['password_dovecotpw_with_method'] = false;

- name: Set managesieve plugin values
  ansible.builtin.blockinfile:
    path: /etc/roundcube/plugins/managesieve/config.inc.php
    insertbefore: "^\\?>.*"
    marker: "// {mark} ANSIBLE MANAGED BLOCK"
    block: |
      $config['managesieve_host'] = 'localhost';

- name: Set new_user_identity plugin values
  ansible.builtin.blockinfile:
    path: /etc/roundcube/plugins/new_user_identity/config.inc.php
    insertbefore: "^\\?>.*"
    marker: "// {mark} ANSIBLE MANAGED BLOCK"
    block: |
      $config['new_user_identity_addressbook'] = 'yararchive';
      $config['new_user_identity_match'] = 'mail';
      $config['new_user_identity_onlogin'] = true;

- name: Set html5_notifier plugin values
  ansible.builtin.blockinfile:
    path: /etc/roundcube/plugins/html5_notifier/config.inc.php
    insertbefore: "^\\?>.*"
    marker: "// {mark} ANSIBLE MANAGED BLOCK"
    block: |
      $config['html5_notifier_duration'] = '5';
      $config['html5_notifier_smbox'] = '1';
      $config['html5_notifier_excluded_directories'] = 'Trash';

- name: Set autocomplete settings
  ansible.builtin.blockinfile:
    path: /etc/roundcube/config.inc.php
    marker: "// {mark} autocomplete settings ANSIBLE MANAGED BLOCK"
    block: |
      $config['autocomplete_addressbooks'] = [
        'sql',
        {% for book in roundcube.ldap_addressbooks %}
        '{{ book.index }}',
        {% endfor %}
      ];

- name: Unarchive globaladdressbook plugin
  ansible.builtin.unarchive:
    src: roundcube/globaladdressbook.tar.gz
    dest: "/usr/share/roundcube/plugins"
    owner: root
    group: root

- name: Make a link for globaladdressbook plugin
  ansible.builtin.file:
    state: link
    src: /usr/share/roundcube/plugins/globaladdressbook
    dest: /var/lib/roundcube/plugins/globaladdressbook

- name: Create directory for globaladdressbook plugin config
  ansible.builtin.file:
    state: directory
    path: /etc/roundcube/plugins/globaladdressbook
    mode: "0755"

- name: Set globaladdressbook plugin config
  ansible.builtin.template:
    src: roundcube/globaladdressbook-config.php.j2
    dest: /etc/roundcube/plugins/globaladdressbook/config.inc.php
    mode: "0644"

- name: Put link to the globaladdressbook plugin config
  ansible.builtin.file:
    state: link
    src: /etc/roundcube/plugins/globaladdressbook/config.inc.php
    dest: /usr/share/roundcube/plugins/globaladdressbook/config.inc.php

- name: Set addressbooks
  ansible.builtin.blockinfile:
    path: /etc/roundcube/config.inc.php
    marker: "// {mark} addressbook {{ book.index }} ANSIBLE MANAGED BLOCK"
    block: |
      $config['ldap_public']['{{ book.index }}'] = array(
        'name' => '{{ book.name }}',
        'hosts' => array(
        {% for host in book.hosts %}
        '{{ host }}',
        {% endfor %}
        ),
        'ldap_version' => 3,
        'network_timeout' => 10,
        'user_specific' => false,
        'base_dn' => '{{ book.base_dn }}',
        'bind_dn' => '{{ book.bind_dn }}',
        'bind_pass' => '{{ book.bind_pass }}',
        'writable' => false,
        'LDAP_Object_Classes' => array('top', 'person'),
        'required_fields' => array('cn', 'sn', 'givenName', 'mail'),
        'LDAP_rdn' => 'mail',
        'ldap_version' => 3,
        'search_fields' => array('mail', 'cn'),
        'sort' => 'cn',
        'scope' => 'sub',
        'filter' => '{{ book.filter }}',
        'fuzzy_search' => true,
        'sizelimit' => '0',
        'timelimit' => '0',
        'fieldmap' => [
          'name' => 'cn',
          'surname' => 'sn',
          'firstname' => 'givenName',
          'jobtitle' => 'title',
          'email' => 'mail:*',
          'phone:home' => 'homePhone',
          'phone:work' => 'telephoneNumber',
          'phone:mobile' => 'mobile',
          'phone:pager' => 'pager',
          'phone:workfax' => 'facsimileTelephoneNumber',
          'street:work' => 'streetAddress',
          'zipcode:work' => 'postalCode',
          'region:work' => 'st',
          'locality:work' => 'l',
          'country:work' => 'c',
          'organization' => 'company',
          'department' => 'department',
          'jobtitle' => 'title',
          'notes' => 'description',
          'photo' => 'jpegPhoto',
        ],
      );
  loop: "{{ roundcube.ldap_addressbooks }}"
  loop_control:
    loop_var: book
