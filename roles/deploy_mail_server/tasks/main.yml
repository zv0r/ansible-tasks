---
- name: Replace localhost IP to actual IP at /etc/hosts file
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: "^127.*{{ inventory_hostname }}"
    line: "{{ ansible_host }} {{ inventory_hostname }} {{ inventory_hostname_short }} {{ mail_server_fqdn }}"
    owner: root
    group: root
    mode: "0644"

- name: Install packages
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: true
    state: present
  with_items:
    - postfix
    - postfix-pgsql
    - dovecot-imapd
    - dovecot-pgsql
    - dovecot-lmtpd
    - dovecot-sieve
    - dovecot-managesieved
    - rspamd
    - postgresql
    - nginx
    - php-fpm
    - php-apcu
    - php-xml
    - php-gd
    - php-common
    - php-json
    - php-mbstring
    - php-zip
    - php-curl
    - php-fileinfo
    - php-bz2
    - php-intl
    - php-imagick
    - php-bcmath
    - php-gmp
    - python3-psycopg2 # for ansible postgresql module
    - acl # for becoming unprivileged user in ansible postgresql module
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Disable unconfigured systemd services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
    masked: false
    enabled: false
  with_items:
    - nginx
    - postfix
    - dovecot

- name: Remove nginx default website config
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Open ports with ufw
  community.general.ufw:
    rule: allow
    name: WWW Full

- name: Get PHP version
  block:
    - name: Register php command output
      ansible.builtin.command: php -v
      register: php_version_command_output
      failed_when: php_version_command_output.rc != 0
      changed_when: php_version_command_output.rc != 0

    - name: Get PHP version with regexp
      ansible.builtin.set_fact:
        php_version: "{{ php_version_command_output.stdout | regex_search('php ([0-9]+\\.[0-9]+)', '\\1', ignorecase=true) | first }}"

    - name: Get PHP directory
      ansible.builtin.set_fact:
        php_directory: "/etc/php/{{ php_version }}/fpm"

- name: Set memory_limit in php.ini
  ansible.builtin.lineinfile:
    path: "{{ php_directory }}/php.ini"
    regexp: "^memory_limit.*"
    line: "memory_limit = 512M"

- name: Set opcache.enable_cli in php.ini
  ansible.builtin.lineinfile:
    path: "{{ php_directory }}/php.ini"
    regexp: "^;?opcache.enable_cli.*"
    line: "opcache.enable_cli=1"

- name: Set opcache.enable_cli in php.ini
  ansible.builtin.lineinfile:
    path: "{{ php_directory }}/../mods-available/apcu.ini"
    regexp: "^;?apc.enable_cli.*"
    line: "apc.enable_cli=1"

- name: Set postgresql password
  become: true
  become_method: sudo
  become_user: postgres
  community.postgresql.postgresql_user:
    db: postgres
    name: postgres
    password: "{{ postgresql_postgres_user_password }}"

- name: Create mail server database
  community.postgresql.postgresql_db:
    name: "{{ postgresql_mail_server_databse_name }}"
    login_host: "{{ postgresql_host }}"
    login_user: postgres
    login_password: "{{ postgresql_postgres_user_password }}"

- name: Prepare database
  block:
    - name: Copy prepare_postgres.sql to target machine
      ansible.builtin.template:
        src: prepare_postgres.sql.j2
        dest: /tmp/prepare_postgres.sql
        mode: "0644"

    - name: Run prepare_postgres.sql script
      community.postgresql.postgresql_script:
        db: "{{ postgresql_mail_server_databse_name }}"
        login_host: "{{ postgresql_host }}"
        login_user: postgres
        login_password: "{{ postgresql_postgres_user_password }}"
        path: /tmp/prepare_postgres.sql

    - name: Remove prepare_postgres.sql on target machine
      ansible.builtin.file:
        path: /tmp/prepare_postgres.sql
        state: absent

- name: Copy postfix configs with postgres settings
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    group: postfix
    mode: "0640"
  with_items:
    - { src: pgsql-virtual-alias-maps.cf.j2, dest: /etc/postfix/pgsql-virtual-alias-maps.cf }
    - { src: pgsql-virtual-mailbox-domains.cf.j2, dest: /etc/postfix/pgsql-virtual-mailbox-domains.cf }
    - { src: pgsql-virtual-mailbox-maps.cf.j2, dest: /etc/postfix/pgsql-virtual-mailbox-maps.cf }
