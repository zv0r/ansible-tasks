---
- name: Stop samba related systemd services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
  with_items: "{{ samba_systemd_units }}"
  ignore_errors: true

- name: Create directory for Samba sources
  ansible.builtin.file:
    path: "{{ samba_sources_directory }}"
    state: directory
    mode: "0775"

- name: Download and unarchive Samba source code tarball
  ansible.builtin.unarchive:
    src: "{{ samba_tarball_url }}"
    dest: "{{ samba_sources_directory }}"
    remote_src: true

- name: Get samba source code working directory, step 1
  ansible.builtin.find:
    paths: "{{ samba_sources_directory }}"
    file_type: file
    patterns: "VERSION"
    recurse: true
  register: find_results

- name: Get samba source code working directory, step 2
  ansible.builtin.set_fact:
    samba_source_working_dir: "{{ find_results.files[0].path | dirname }}"

- name: Configure samba sources
  ansible.builtin.command:
    argv:
      - "{{ samba_source_working_dir }}/configure"
      - "--prefix={{ samba_installation_directory | quote }}"
      - "--with-systemd"
      - "--systemd-install-services"
      - "--with-systemddir={{ samba_systemd_units_directory }}"
    chdir: "{{ samba_source_working_dir }}"
  register: samba_configure_output
  changed_when: samba_configure_output.rc != 0
  failed_when: samba_configure_output.rc != 0

- name: Make
  ansible.builtin.command:
    argv:
      - "/usr/bin/make"
      - "-j"
      - "{{ ansible_processor_vcpus }}"
    chdir: "{{ samba_source_working_dir }}"
  register: samba_make_output
  changed_when: samba_make_output.rc != 0
  failed_when: samba_make_output.rc != 0

- name: Make install
  ansible.builtin.command:
    argv:
      - "/usr/bin/make"
      - "install"
    chdir: "{{ samba_source_working_dir }}"
  register: samba_make_install_output
  changed_when: samba_make_install_output.rc != 0
  failed_when: samba_make_install_output.rc != 0

- name: Remove sources directory
  ansible.builtin.file:
    path: "{{ samba_sources_directory }}"
    state: absent
